var O2 = require('o2');

var DURATION_TYPE_INSTANT = 0;
var DURATION_TYPE_TEMPORARY = 1;
var DURATION_TYPE_FOREVER = 2;

O2.createClass('ADV.Effect', {
	_aTags: null,
	_nDuration: 0,
	_nDurationType: 0,
	_oSource: null,
	_oTarget: null,
	_bExpired: false,
	_nExpirationTime: 0,
	_nLevel: 0,
	_sDescriptor: '',  // champ libre
	
	/**
	 * Tag apprécié
	 * 
	 * "curse" l'effet est néfaste
	 * "bless" l'effet est bénéfique
	 * "scroll" l'effet est véhiculé par un scroll
	 * "potion" l'effet est véhiculé par une potion
	 * "spell" l'effet est véhiculé par un sort
	 * "wand" l'effet est véhiculé par une baguette
	 */
	__construct: function() {
		this._aTags = Array.prototype.slice.call(arguments, 0);
	},
	
	setTag: function(s) {
		var t = this._aTags;
		if (this.hasTag(s)) {
			return;
		} else {
			t.push(s);
		}
	},
	
	removeTag: function(s) {
		var t = this._aTags;
		var n = t.indexOf(s);
		if (n >= 0) {
			t.splice(n, 1);
		}
	},

	getTags: function() {
		return this._aTags;
	},

	getTag: function(n) {
		return this._aTags[n];
	},

	hasTag: function(s) {
		return this._aTags.indexOf(s) >= 0;
	},
	
	setLevel: function(n) {
		this._nLevel = n | 0;
	},
	
	getLevel: function() {
		return this._nLevel;
	},
	
	

	setDuration: function(n) {
		if (n === null) {
			this.setDurationType(DURATION_TYPE_FOREVER);
		} else if (n === 0) {
			this.setDurationType(DURATION_TYPE_INSTANT);
		} else {
			this.setDurationType(DURATION_TYPE_TEMPORARY);
		}
		this._nDuration = n;
	},
	
	getDuration: function() {
		return this._nDuration;
	},
	
	setDurationType: function(n) {
		this._nDurationType = n;
	},
	
	getDurationType: function(n) {
		return this._nDurationType;
	},
	
	setSource: function(o) {
		this._oSource = o;
	},
	
	getSource: function() {
		return this._oSource;
	},
	
	setTarget: function(o) {
		this._oTarget = o;
	},

	getTarget: function() {
		return this._oTarget;
	},

	/**
	 * Renvoie true si la duration a expiré
	 */
	isExpired: function(nTimeStamp) {
		if (this._bExpired) {
			return true;
		}
		switch (this.getDurationType()) {
			case DURATION_TYPE_FOREVER:
				return false;
				
			case DURATION_TYPE_INSTANT:
				return this._bExpired = true;
				
			default:
				return this._bExpired = nTimeStamp >= this._nExpirationTime;
		}
	},
	
	dispel: function() {
		this._bExpired = true;
	},
	
	/**
	 * Fonction initialement appelée lors de l'application de leffet
	 */
	cast: function(ep) {
	},
	
	/**
	 * Fonction invoquée a chaque round
	 */
	run: function(ep) {
	},
	
	/**
	 * Fonction invoquée lorsque l'effet prend fin
	 */
	expire: function(ep) {
	},
	
	/**
	 * Fonction invoquée lorsque un nouvel effet est appliqué à la soul
	 * Cette fonction renvoie true ou false pour signifier qu'elle
	 * accepte le nouvel effet ou bien s'il est annulé
	 */
	accept: function() {
		return true;
	}
});

module.exports = ADV.Effect;
