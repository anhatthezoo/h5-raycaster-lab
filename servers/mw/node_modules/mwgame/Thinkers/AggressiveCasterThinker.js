/**
 * Un thinker de base pour toute les créatures avec une IA
 */
var O2 = require('o2');
var AggressiveThinker = require('./AggressiveThinker.js');
var u = require('mwgame/Utils.js');

O2.extendClass('AggressiveCasterThinker', AggressiveThinker, {
	
	__construct: function() {
		O2.parent(this);
		this.setMode('patrol');
	},
	
	/**
	 * ne fais plus rien.
	 * en fonction du mode on redirige vers une nouvelle bordée de scripts
	 */
	thinkIdle: function() {
		O2.parent(this);
		switch (this._sMode) {
			case 'cast':
				this.pushAction('stop', 7);
				this.pushAction('aim', 10);
				this.pushAction('cast', 30);
				this.pushAction('stop', 20);
				this.pushAction('check');
			break;
		}
	},
	
	/**
	 * On verifie si la cible est toujours active et visible
	 */
	actionCheck: function() {
		O2.parent(this);
		if (this.getTarget()) {
			if (this._sMode === 'cast') {
				this.setMode('fight');
			} else if (u.prob(100)) {
				this.setMode('cast');
			}
		}
		this.setThink('wait');
	},


	actionCast: function() {
		var oEntity = this.oEntity;
		var oTarget = this.getTarget();
		if (oTarget) {
			a = this.getEntityAngle(oTarget);
			oEntity.setCourse(a);
			var oInv = oEntity.getData('inventory');
			if (oInv) {
				var iItem = u.rand(0, oInv.aBagSlots.length - 1);
				var oItem = oInv.aBagSlots[iItem];
				if (oItem) {
					this.oGame.entityUseItem(oEntity, iItem, true);
				}
			}
		}
		this.setThink('wait');
	}
});

module.exports = AggressiveCasterThinker;
