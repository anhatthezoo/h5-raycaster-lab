/**
 * Un thinker de base pour toute les créatures avec une IA
 */
var O2 = require('o2');
var CreatureThinker = require('./CreatureThinker.js');
var u = require('mwgame/Utils.js');

O2.extendClass('AggressiveThinker', CreatureThinker, {
	__construct: function() {
		O2.parent(this);
		this.setMode('patrol');
	},
	
	/**
	 * ne fais plus rien.
	 * en fonction du mode on redirige vers une nouvelle bordée de scripts
	 */
	thinkIdle: function() {
		O2.parent(this);
		switch (this._sMode) {
			case 'patrol':
				this.setTarget(null);
				this.pushAction('walk', 30, u.rand(0, 7) * Math.PI / 4);
				this.pushAction('seek');
				this.pushAction('stop', 20);
				this.pushAction('seek');
			break;
			
			case 'fight':
				this.pushAction('stop', 7);
				this.pushAction('aim', 10);
				this.pushAction('attack', 12);
				this.pushAction('attack', 12);
				this.pushAction('attack', 12);
				this.pushAction('stop', 20);
				this.pushAction('walk', 15, u.rand(0, 7) * Math.PI / 4);
				this.pushAction('seek');
				this.pushAction('stop', 10);
				this.pushAction('check');
			break;
		}
	},

	actionHold: function(n) {
		if (n > 0) {
			this.setMode('hold');
		} else {
			this.setMode('patrol');
		}
	},
	
	/**
	 * On verifie si la cible est toujours active et visible
	 */
	actionCheck: function() {
		var oTarget = this.getTarget();
		if (!oTarget) {
			this.setMode('patrol');
		} else if (!this.isEntityVisible(oTarget)) {
			this.setTarget(null);
			this.setMode('patrol');
		}
		this.setThink('wait');
	}
});

module.exports = AggressiveThinker;
